from aiogram import F, Router
from aiogram.filters import Command, CommandStart
from aiogram.filters.callback_data import CallbackData
from aiogram.types import Message, ReplyKeyboardRemove, KeyboardButton, CallbackQuery
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

router = Router()


class Goods(CallbackData, prefix='goods'):
    category: str
    item_id: int


def get_main_menu_keyboard():
    builder = ReplyKeyboardBuilder()
    for i in range(1, 4):
        builder.add(KeyboardButton(text=f'–ó–∞–¥–∞–Ω–∏–µ {i}'))
    builder.adjust(3)
    main_menu_kbd = builder.as_markup(
        one_time_keyboard=True,
        resize_keyboard=True,
        input_field_placeholder="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞"
    )
    return main_menu_kbd


def get_menu_task_1():
    builder = ReplyKeyboardBuilder()
    for i in range(1, 11):
        builder.add(KeyboardButton(text=f'–ö–Ω–æ–ø–∫–∞ {i}'))
    builder.adjust(3, 2, 5)
    menu_task_1_kbd = builder.as_markup(
        resize_keyboard=True,
        input_field_placeholder="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞"
    )
    return menu_task_1_kbd


def get_menu_task_2():
    builder = ReplyKeyboardBuilder()
    builder.row(
        KeyboardButton(
            text='–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç'
        )
    )
    builder.row(
        KeyboardButton(
            text='–ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞',
            request_contact=True
        )
    )
    builder.row(
        KeyboardButton(
            text='–ó–∞–ø—Ä–æ—Å –ª–æ–∫–∞—Ü–∏–∏',
            request_location=True
        )
    )
    menu_task_2_kbd = builder.as_markup(
        resize_keyboard=True,
        input_field_placeholder="–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞"
    )
    return menu_task_2_kbd


def get_menu_task_3():
    builder = InlineKeyboardBuilder()
    builder.button(
        text='–ü–∏–ª–∞ ü™ö',
        callback_data=Goods(
            category='–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
            item_id=1
        )
    )
    builder.button(
        text='–°—Ç—É–ª ü™ë',
        callback_data=Goods(
            category='–ú–µ–±–µ–ª—å',
            item_id=2
        )
    )
    builder.button(
        text='–ß–∞–π–Ω–∏–∫ ü´ñ',
        callback_data=Goods(
            category='–ü–æ—Å—É–¥–∞',
            item_id=3
        )
    )
    builder.adjust(1)
    menu_task_3_kbd = builder.as_markup()
    return menu_task_3_kbd


@router.message(CommandStart())
async def cmd_start(message: Message):
    if message.from_user.first_name:
        text = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!'
    else:
        text = '–ü—Ä–∏–≤–µ—Ç!'
    await message.answer(text)
    await message.answer(
        '–≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∫ —É—Ä–æ–∫—É 7.9 <b>"–ö–Ω–æ–ø–∫–∏"</b>\n\n'
        '–î–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /keyboards\n'
        '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel'
    )


@router.message(Command('keyboards'))
async def cmd_keyboards(message: Message):
    main_menu_kbd = get_main_menu_keyboard()
    await message.answer(
        '–≠—Ç–æ –º–µ–Ω—é –∑–∞–¥–∞–Ω–∏—è',
        reply_markup=main_menu_kbd
    )


@router.message(Command('cancel'))
async def cmd_cancel(message: Message):
    await message.answer(
        '–í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—á–∞–ª–æ',
        reply_markup=get_main_menu_keyboard()
    )


@router.message(F.text == '–ó–∞–¥–∞–Ω–∏–µ 1')
async def cmd_task_1(message: Message):
    menu_task_1_kbd = get_menu_task_1()
    await message.answer(
        '–≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
        reply_markup=menu_task_1_kbd
    )


@router.message(F.text.contains('–ö–Ω–æ–ø–∫–∞'))
async def cmd_return_main_menu(message: Message):
    await message.answer(
        '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        reply_markup=get_main_menu_keyboard()
    )


@router.message(F.text == '–ó–∞–¥–∞–Ω–∏–µ 2')
async def cmd_task_2(message: Message):
    menu_task_2_kbd = get_menu_task_2()
    await message.answer(
        '–≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
        reply_markup=menu_task_2_kbd
    )


@router.message(F.text == '–ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç')
async def cmd_return_text(message: Message):
    await message.reply(
        '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        reply_markup=get_main_menu_keyboard()
    )


@router.message(F.location)
async def cmd_return_location(message: Message):
    x = message.location.longitude
    y = message.location.latitude
    await message.answer(
        '–û–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n\n'
        f'–î–æ–ª–≥–æ—Ç–∞: <b>{x}</b>\n'
        f'–®–∏—Ä–æ—Ç–∞: <b>{y}</b>\n\n'
        '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        reply_markup=get_main_menu_keyboard()
    )


@router.message(F.contact)
async def cmd_return_contact(message: Message):
    fist_name = message.contact.first_name
    last_name = message.contact.last_name
    user_id = message.contact.user_id
    phone_number = message.contact.phone_number
    await message.answer(
        '–û–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n\n'
        f'–ò–º—è: <b>{fist_name}</b>\n'
        f'–§–∞–º–∏–ª–∏—è : <b>{last_name}</b>\n'
        f'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è : <b>{user_id}</b>\n'
        f'–¢–µ–ª–µ—Ñ–æ–Ω : <b>{phone_number}</b>\n\n'
        '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        reply_markup=get_main_menu_keyboard()
    )


@router.message(F.text == '–ó–∞–¥–∞–Ω–∏–µ 3')
async def cmd_task_3(message: Message):
    menu_task_3_kbd = get_menu_task_3()
    await message.answer(
        '–≠—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Ç—Ä–µ—Ç—å–µ –∑–∞–¥–∞–Ω–∏–µ',
        reply_markup=menu_task_3_kbd
    )


@router.callback_query(Goods.filter())
async def select_item(call: CallbackQuery, callback_data: Goods):
    category = callback_data.category
    item_id = callback_data.item_id
    button_item = call.message.reply_markup.inline_keyboard[int(item_id)-1]
    item = button_item[0].text
    await call.message.answer(
        text='–í—ã –í—ã–±—Ä–∞–ª–∏: \n'
        f'<b>{item}</b>\n'
        f'ID —Ç–æ–≤–∞—Ä–∞ - {item_id}\n'
        f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è  - {category}\n\n',
        reply_markup=get_menu_task_3()
    )
    await call.answer(
        text='–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!',
        show_alert=True
    )
